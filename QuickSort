
int partition(vector<int>& arr, int low, int high) {
  
  
    int pivot_val = arr[low];
  
    int i = low ;

   
    for (int j = low+1; j <= high ; j++) {
        if (arr[j] <= pivot_val) {
            i++;
            swap(arr[i], arr[j]);
            
        }
    }
    
    swap(arr[i], arr[low]);  
    return i ;
}


void QuickSort(vi &a, int l, int r){
  if(l<r){
    int pivot = partition(a,l,r);
    QuickSort(a,l,pivot-1);
    // pivot is already sorted 
    QuickSort(a,pivot+1,r);
  }
}

void solve()
{
   int n; cin>>n;
   vi a(n);
   for(int i=0;i<n;i++){
   cin>>a[i];
   }

   QuickSort(a,0,n-1);

   for (int i=0; i<n; i++){
    cout<<a[i]<<" ";
   }
    

}
